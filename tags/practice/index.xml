<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>practice on Kuldeep Singh</title>
    <link>https://thinkuldeep.github.io/tags/practice/</link>
    <description>Recent content in practice on Kuldeep Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Oct 2019 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://thinkuldeep.github.io/tags/practice/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Static Code Analysis for Unity3D — Part 2</title>
      <link>https://thinkuldeep.github.io/post/static_code_analysis_unity_2/</link>
      <pubDate>Wed, 30 Oct 2019 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/static_code_analysis_unity_2/</guid>
      <description>This article is in continuation of Static Code Analysis for Unity3D — Part 1 where we talked about setting up a local sonar server, sonar scanner and running the analysis for a Unity3D project.
It this article, we will discuss setting up the Static Code Analysis with SonarCube in IDE — Rider. We are using Rider as the “External Script Editor” in Unity. Configure Rider here in Unity&amp;gt; Preferences &amp;gt; External Tools &amp;gt; External Script Editor.</description>
    </item>
    
    <item>
      <title>Static Code Analysis for Unity3D — Part 1</title>
      <link>https://thinkuldeep.github.io/post/static_code_analysis_unity_1/</link>
      <pubDate>Tue, 29 Oct 2019 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/static_code_analysis_unity_1/</guid>
      <description>Static code analysis is a standard practice in software development. There are code scanner tools, which scans the code to find vulnerabilities. There are some nice tools for visualizing and managing code quality. One of the most used tool is SonarQube, supports 25+ languages and flexible configurations of the rules.
There are not enough resources talking about static code analysis for Unity3D. This post covers steps to configure SonarQube and use it for scanning Unity projects.</description>
    </item>
    
    <item>
      <title>Boost your organisation agility by test-first-pair development</title>
      <link>https://thinkuldeep.github.io/post/test-first-pair-development/</link>
      <pubDate>Sat, 15 Sep 2018 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/test-first-pair-development/</guid>
      <description>Agile software development methodology is the key selling point for most of the IT organisations, however many of the organisations have gone by the literal meaning of the word &amp;ldquo;Agile&amp;rdquo;. They follow agile practices without really being agile. If we go by Manifesto for Agile Software Development, it focus more on human factor (people, interaction, collaboration) which produces working software as per the need of time, than on processes, tools and strict planning.</description>
    </item>
    
    <item>
      <title>Writing maintainable code is like house cleaning</title>
      <link>https://thinkuldeep.github.io/post/clean-code/</link>
      <pubDate>Thu, 14 Jan 2016 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/clean-code/</guid>
      <description>Your house will remain clean for longer duration if you follow certain rules strictly such as put things at right place after use, clear any mesh just after doing it, repair/upgrade things on time, daily dusting, vacuum cleaning etc. We may avoid a massive cleanup if we apply a series of small efforts daily.
 Let for the same while writing the code –  Your code will remain maintainable for longer duration if you follow certain rules strictly such as follow the coding standards and guidelines, clean the code just after it, fix/refactor on time, periodic design review and refactoring.</description>
    </item>
    
  </channel>
</rss>