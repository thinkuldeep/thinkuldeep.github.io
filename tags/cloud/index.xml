<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>cloud on Kuldeep Singh</title>
        <link>https://thinkuldeep.com//tags/cloud/</link>
        <description>Recent content in cloud on Kuldeep Singh</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <managingEditor>thinkuldeep@gmail.com (Kuldeep Singh)</managingEditor>
        <webMaster>thinkuldeep@gmail.com (Kuldeep Singh)</webMaster>
        <lastBuildDate>Sat, 15 Feb 2025 11:58:08 -0400</lastBuildDate><atom:link href="http://localhost:1313/tags/cloud/index.xml" rel="self" type="application/rss+xml" />
        <item>
            <title>Implementing a TCP Client in nRF Connect</title>
            <link>https://thinkuldeep.com//post/iot-thread-tcp-client-implementation/</link>
            <pubDate>Sat, 15 Feb 2025 11:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-thread-tcp-client-implementation/</guid>
            <description>In a previous article, we implemented a Joiner that is programmatically provisioned by a Commissioner node to join a Thread network. Once an IoT device is part of the Thread network, the next step is to enable communication with other Thread nodes or external hosts. We previously discussed and tested UDP-based communication in Connecting Thread devices to Internet. In this article, we explore a similar approach with TCP OT CLI, and here we are implementing a custom TCP client that sends data to a TCP server programmatically.</description>
        </item>
        
        <item>
            <title>nRF Connect SDK Advanced Practices</title>
            <link>https://thinkuldeep.com//post/iot-nrf-connect-sdk-advanced/</link>
            <pubDate>Sun, 09 Feb 2025 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-nrf-connect-sdk-advanced/</guid>
            <description>In our previous article, we provided a brief overview of the nRF Connect SDK and demonstrated how to build a simple application. This article explores advanced practices for working with the nRF Connect SDK, focusing on Zephyr OS internals, including timers, schedulers, bootloading, DFU, and FOTA concepts. It builds on our previous introduction to the nRF Connect SDK and provides insights into developing multi-threaded firmware, troubleshooting, and deploying firmware over the air (OTA).</description>
        </item>
        
        <item>
            <title>Implementing a Joiner in nRF Connect SDK</title>
            <link>https://thinkuldeep.com//post/iot-thread-joiner-implementation/</link>
            <pubDate>Sat, 08 Feb 2025 11:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-thread-joiner-implementation/</guid>
            <description>In a previous article, we explored how a Commissioner node provisions a Joiner in a Thread network using OpenThread&amp;rsquo;s default firmware. However, in real-world applications, custom firmware logic is often required, along with programmatic control over the commissioning process. In this article, we will implement a Joiner using the nRF Connect SDK, following these four key steps.
Joiner in Action The Joiner process involves the following steps:
 Enable Thread – Ensure that the Thread network and IPv6 are enabled.</description>
        </item>
        
        <item>
            <title>Simplifying Thread Network Provisioning with Joiner and Commissioner</title>
            <link>https://thinkuldeep.com//post/iot-thread-network-provisioning/</link>
            <pubDate>Sat, 08 Feb 2025 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-thread-network-provisioning/</guid>
            <description>In previous articles, we explored the Thread protocol and connected Thread devices to the internet using a Border Router. We joined the Thread network by manually configuring each node with a full dataset containing network credentials such as the PAN ID, Network Key, Network Name, and more (refer to Step 6.1: Access Network Credentials). While this method works, it becomes impractical when provisioning hundreds of Thread devices in real-world scenarios.</description>
        </item>
        
        <item>
            <title>Getting Started with Bluetooth Low Energy (BLE)</title>
            <link>https://thinkuldeep.com//post/iot-ble/</link>
            <pubDate>Thu, 23 Jan 2025 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-ble/</guid>
            <description>In a previous article, we explored how to build IoT firmware applications using the nRF Connect SDK. We examined its project structure and learned how to build and flash firmware on the nRF52840 dongle. If you missed it, you can catch up here:
For more hands-on practices, use nRF52840 Development Kit (DK), that offers advanced developer features. You need to connect this board via a high-speed data cable like this one, to get it detected on your PC.</description>
        </item>
        
        <item>
            <title>Getting Started with nRF Connect SDK</title>
            <link>https://thinkuldeep.com//post/iot-nrf-connect-sdk/</link>
            <pubDate>Wed, 08 Jan 2025 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-nrf-connect-sdk/</guid>
            <description>In the previous article, we explored setting up a Thread Network and enabling communication within and outside the network via a Border Router using OpenThread and the nRF Connect SDK. While we covered installing and configuring the SDK during the setup, we didn’t dive into the development process for nRF Connect SDK Apps. Let’s address that now!
What We’ll Cover This article introduces the nRF Connect SDK and walks through building applications with it.</description>
        </item>
        
        <item>
            <title>Connecting Thread Devices to Internet</title>
            <link>https://thinkuldeep.com//post/iot-thread-devices-internet/</link>
            <pubDate>Wed, 01 Jan 2025 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-thread-devices-internet/</guid>
            <description>In previous articles, we explored the Thread Network and its protocol, focusing on the formation, functionality, and topology of the network. Thread is a lightweight, low-power communication protocol for IoT devices, operating on IPv6. We discussed its ability to automatically establish a mesh network and maintain connectivity through its robust topology.
We simulated a Thread network using Docker. Now in this article, we’ll create a Thread network between physical devices and connect it to the internet.</description>
        </item>
        
        <item>
            <title>Understanding the Thread Protocol and Network</title>
            <link>https://thinkuldeep.com//post/iot-the-thread-protocol-and-network/</link>
            <pubDate>Sat, 26 Oct 2024 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-the-thread-protocol-and-network/</guid>
            <description>In previous articles, we explored MQTT in-depth, even setting up a web-based remote controller that simulated a physical button. We did this in a “Soft IoT” way, avoiding hardware intricacies. However, in IoT, networking between devices plays a crucial role. Not all IoT devices are connected to the Internet or can communicate via MQTT over the internet, as shown in our earlier examples. These devices need a low-latency, low-power network that can auto-discover and manage device communication seamlessly.</description>
        </item>
        
        <item>
            <title>Soft IoT Continued: Bringing the Internet into IoT</title>
            <link>https://thinkuldeep.com//post/soft-iot-continued/</link>
            <pubDate>Fri, 18 Oct 2024 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/soft-iot-continued/</guid>
            <description>Simplifying IoT learning doesn’t have to mean getting bogged down with hardware details. Instead, let’s dive into Soft IoT — where we focus on software-driven IoT exploration. In this article, we’ll learn how to read inputs from a button and turn it into a web based remote control for an LED, all while keeping things software-centric..
In the previous article, we introduced Soft IoT using a Grove Pi board, which simplifies IoT learning by hiding wiring and connections complexity.</description>
        </item>
        
        <item>
            <title>Getting Started with Soft IoT</title>
            <link>https://thinkuldeep.com//post/soft-iot/</link>
            <pubDate>Wed, 09 Oct 2024 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/soft-iot/</guid>
            <description>Learning IoT doesn’t have to be complex, especially when starting out. In this post, we’ll explore how to get started with IoT without diving deep into hardware complexities like wiring or understanding intricate sensor details.
In an earlier article, we set up a Raspberry Pi. My son initially saw it as just another, albeit slower, computer. There was no “IoT” in it yet, just a basic device. But IoT is about more than just the device itself; it’s about integrating sensors and actuators.</description>
        </item>
        
        <item>
            <title>Booting Up the Internet of Things</title>
            <link>https://thinkuldeep.com//post/iot-rebooting/</link>
            <pubDate>Wed, 25 Sep 2024 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot-rebooting/</guid>
            <description>A few years ago, I bought a Raspberry Pi 3, but during a house move, I misplaced it. Fast forward to this Diwali cleaning, and to my surprise, I found it! My son’s curiosity was piqued, so we decided to set it up together. While my recent focus has been on XR technologies and we setup XRPractices, but this moment brought me back to IoT — sparking the idea to share my journey and experiences through a series of articles on getting started with IoT.</description>
        </item>
        
        <item>
            <title>Enterprise XR - Multi-Factor Authentication</title>
            <link>https://thinkuldeep.com//post/enterprise-xr-multi-factor-authentication/</link>
            <pubDate>Wed, 25 Mar 2020 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/enterprise-xr-multi-factor-authentication/</guid>
            <description>XR use cases are growing with advancements in the devices, internet and development technologies. There is an ever-growing demand to build enterprise use cases using ARVR technology. Most enterprise use cases eventually require integration with an enterprise ecosystem such as IAM (Identity and Access Management), ERP, CRM, and single sign-on with other systems.
Most organizations protect digital assets with a single sign-on using Multiple Factor Authentication (MFA). The MFA is generally a web-browser based authentication where the browser redirects to tenant’s authentication page where the user provides their credentials and then the user confirms another factor (PIN, OTP, SMS or mobile notifications), once it succeeds, it gets redirected back to the protected resource.</description>
        </item>
        
        <item>
            <title>Can IT modernization lead to revenue loss?</title>
            <link>https://thinkuldeep.com//post/can_it_modernization_lead_to_revenue_loss/</link>
            <pubDate>Wed, 10 Apr 2019 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/can_it_modernization_lead_to_revenue_loss/</guid>
            <description>IT Modernization is one of the key factors of today&amp;rsquo;s digital transformation. Most of the enterprises trying to define digital transformation strategy. IT organizations trying to redesign the organizations to meet the changing business need, and uplift the technology and people. Non-IT organizations are also trying to setup digital department to take care of companies digital assets and modernize them. However, IT modernization does not always result in a profit, it may lead to revenue loss if it does not fit to the organization design.</description>
        </item>
        
        <item>
            <title>IOT 101: A primer on Internet of Things</title>
            <link>https://thinkuldeep.com//post/iot_simplified/</link>
            <pubDate>Tue, 21 Feb 2017 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot_simplified/</guid>
            <description>IOT 101 A Primer on Internet of Things  from Kuldeep Singh  The IoT can be described as “Connecting the Things to internet”.
A comprehensive IoT ecosystem consists of many different parts such as electronic circuitry, sensing and acting capability, embedded systems, edge computing, network protocols, communication networks, cloud computing, big data management and analytics, business rules etcetera. This maze of varied parts can be better classified into 4 broad categories:</description>
        </item>
        
        <item>
            <title>Panelist &amp; Organizer - Nagarro LSD - Industry 4.0</title>
            <link>https://thinkuldeep.com//event/nagarro-lsd-industory-4-0/</link>
            <pubDate>Thu, 19 Jan 2017 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//event/nagarro-lsd-industory-4-0/</guid>
            <description>Organized Nagarro LSD event, on Industry 4.0, demonstrated usecases on connected services concept, and was a panelist for a discussion on
 Smarter Services - Predictive, Always Connected, Personalized Global experts will debate ways to create smarter services based around predictive maintenance, always connected devices and personalized solutions.
 Whether we call Industry 4.0 an evolution or a revolution, there is little doubt that it will have a disruptive impact on the manufacturing industry.</description>
        </item>
        
        <item>
            <title>Industrial IoT (IIOT) Reference Architecture</title>
            <link>https://thinkuldeep.com//post/iiot-reference-architecture/</link>
            <pubDate>Tue, 16 Aug 2016 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iiot-reference-architecture/</guid>
            <description>The industry has been going through an evolution. Industry 4.0 is the fourth industrial revolution where the key will be on digital transformation. Industry 4.0 creates what has been called a &amp;ldquo;smart factory&amp;rdquo;. Within the modular structured smart factories, cyber-physical systems monitor physical processes, create a virtual copy of the physical world and make decentralized decisions. Over the Internet of Things, cyber-physical systems communicate and cooperate with each other and with humans in real time, and via the Internet of Services, both internal and cross-organizational services are offered and used by participants of the value chain.</description>
        </item>
        
        <item>
            <title>Building a smart meeting room concept</title>
            <link>https://thinkuldeep.com//post/building-smart-meeting-room-concept/</link>
            <pubDate>Sun, 17 Apr 2016 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/building-smart-meeting-room-concept/</guid>
            <description>On a usual day at office, if an employee wishes to book a meeting room, he or she first has to open their outlook account, check the calendar for its availability and then send a booking invitation. If they directly go to a meeting room, they have no way of knowing whether it is booked or not without checking the calendar.
Smart Meeting Room is a step forward in automating the availability and booking procedure of a meeting room.</description>
        </item>
        
        <item>
            <title>Framework for choosing an IoT Platform</title>
            <link>https://thinkuldeep.com//post/choosing_iot_platform/</link>
            <pubDate>Mon, 17 Aug 2015 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/choosing_iot_platform/</guid>
            <description>As we understand “IoT Platform” is an essential building block of IoT Ecosystem . A platform essentially decouples the business application from low level details of the technology stack and required services. Thus, it makes more sense to go for an off-the-shelf platform that provide all the relevant features and required flexibility, instead of developing the whole IoT stack from scratch. Selection of an IoT Platform is a key to develop a scalable and robust IoT Solution.</description>
        </item>
        
        <item>
            <title>IOT Cloud Platforms -  A Comparative Study</title>
            <link>https://thinkuldeep.com//post/iot_cloud_platform_comparision/</link>
            <pubDate>Fri, 22 Aug 2014 10:58:08 -0400</pubDate>
            <author>thinkuldeep@gmail.com (Kuldeep Singh)</author>
            <guid>https://thinkuldeep.com//post/iot_cloud_platform_comparision/</guid>
            <description>The vision of IoT can be seen from two perspectives— ‘Internet’ centric and ‘Thing’ centric. The Internet centric architecture will involve internet services being the main focus while data is contributed by the objects. In the object centric architecture, the smart objects take the center stage.
In order to realize the full potential of cloud computing as well as ubiquitous sensing, a combined framework with a cloud at the center seems to be most viable.</description>
        </item>
        
    </channel>
</rss>