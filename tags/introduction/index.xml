<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>introduction on Kuldeep Singh</title>
    <link>https://thinkuldeep.github.io/tags/introduction/</link>
    <description>Recent content in introduction on Kuldeep Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Feb 2017 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://thinkuldeep.github.io/tags/introduction/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IOT 101: A primer on Internet of Things</title>
      <link>https://thinkuldeep.github.io/post/iot_simplified/</link>
      <pubDate>Tue, 21 Feb 2017 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/iot_simplified/</guid>
      <description>IOT 101 A Primer on Internet of Things  from Kuldeep Singh  The IoT can be described as “Connecting the Things to internet”.
A comprehensive IoT ecosystem consists of many different parts such as electronic circuitry, sensing and acting capability, embedded systems, edge computing, network protocols, communication networks, cloud computing, big data management and analytics, business rules etcetera. This maze of varied parts can be better classified into 4 broad categories:</description>
    </item>
    
    <item>
      <title>SIGFOX - An Introduction</title>
      <link>https://thinkuldeep.github.io/post/sigfox-an-introduction/</link>
      <pubDate>Mon, 17 Aug 2015 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/sigfox-an-introduction/</guid>
      <description>Introduction SIGFOX is providing a communication solution dedicated to the Internet of Things
Dedicated to the IOT means:
 Simplicity: No configuration, no pairing, no signaling Autonomy: Very low energy consumption, allowing years of autonomy on battery without maintenance Small messages: No large assets or multimedia, only small messages  It is a LPWA (Low-Power Wide-Area) network, currently operating in 20 countries in Europe, Americas and Asia/Pacific. Communications over the SIGFOX network are bi-directional: uplink from device &amp;amp; downlink to the device.</description>
    </item>
    
    <item>
      <title>Introduction to Java Lambda Expression</title>
      <link>https://thinkuldeep.github.io/post/java8-lambda-expression/</link>
      <pubDate>Wed, 10 Dec 2014 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java8-lambda-expression/</guid>
      <description>Introduction After Java 8, developers can apply functional programming constructs in a pure Object-Oriented programming language through lambda expressions. Using lambda expression sequential and parallel execution can be achieved by passing behavior into methods. In Java world lambdas can be thought of as an anonymous method with a more compact syntax. Here compact means it is not mandatory to specify access modifiers, return type and parameter types while defining the expression.</description>
    </item>
    
    <item>
      <title>Introduction to Java Stream API</title>
      <link>https://thinkuldeep.github.io/post/java8-stream-api/</link>
      <pubDate>Mon, 08 Dec 2014 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java8-stream-api/</guid>
      <description>Introduction Prior to JDK 8, collections can only be managed through iterators with the use of for, foreach or while loops. It means that we instruct a computer to execute the algorithm steps.
int sum(List&amp;lt;Integer&amp;gt; list) { Iterator&amp;lt;Integer&amp;gt; intIterator = list.iterator(); int sum = 0; while (intIterator.hasNext()) { int number = intIterator.next(); if (number &amp;gt; 5) { sum += number; } } return sum; } The above approach has the following tailbacks:</description>
    </item>
    
  </channel>
</rss>