<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unity on Kuldeep Singh</title>
    <link>https://thinkuldeep.github.io/tags/unity/</link>
    <description>Recent content in unity on Kuldeep Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Apr 2020 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://thinkuldeep.github.io/tags/unity/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>User Account Management In XR</title>
      <link>https://thinkuldeep.github.io/post/user-account-management-in-xr/</link>
      <pubDate>Sun, 26 Apr 2020 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/user-account-management-in-xr/</guid>
      <description>In the previous article, we described the importance of interoperability in while building Enterprise XR solutions, In the article, we will discuss how to manage user accounts in the XR device, and implement single sign-on across the XR apps. We will use Android’s AccountManger approach to login into active directory and integrated it into Unity. Please read my earlier article on setting up the app in active directory, log in using android webview, considering a web-based company login form should appear for login, and no custom login form is allowed to capture the credentials.</description>
    </item>
    
    <item>
      <title>WebXR - the new Web</title>
      <link>https://thinkuldeep.github.io/post/webxr-the-new-web/</link>
      <pubDate>Sat, 11 Apr 2020 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/webxr-the-new-web/</guid>
      <description>The web has grown from a read-only web (Web 1.0) to interactive web (Web 2.0) and then moved into the semantic web which is more connected and more immersive. 3D content on the web is there for quite some time, the most web-browsers support rendering 3D content natively. The rise for XR technologies and advancements in devices and the internet is leading the demand for Web-based XR. It will be a norm for web-based development.</description>
    </item>
    
    <item>
      <title>Enterprise XR - Interoperability</title>
      <link>https://thinkuldeep.github.io/post/enterprise-xr-interoperability/</link>
      <pubDate>Sat, 28 Mar 2020 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/enterprise-xr-interoperability/</guid>
      <description>In the previous article, we discussed implementing multi-factor authentication for an andorid application, and in the article we will cover another enterprise aspect, Interoperability.
Interoperability is key aspect when we build enterprise solutions using XR technologies. The enterprises have digital assets in form of mobile apps, libraries, system APIs, and they can’t just throw away these existing investments, in fact, the XR apps must be implemented in such a way that it is interoperable with them seamlessly.</description>
    </item>
    
    <item>
      <title>Static Code Analysis for Unity3D — Part 2</title>
      <link>https://thinkuldeep.github.io/post/static_code_analysis_unity_2/</link>
      <pubDate>Wed, 30 Oct 2019 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/static_code_analysis_unity_2/</guid>
      <description>This article is in continuation of Static Code Analysis for Unity3D — Part 1 where we talked about setting up a local sonar server, sonar scanner and running the analysis for a Unity3D project.
It this article, we will discuss setting up the Static Code Analysis with SonarCube in IDE — Rider. We are using Rider as the “External Script Editor” in Unity. Configure Rider here in Unity&amp;gt; Preferences &amp;gt; External Tools &amp;gt; External Script Editor.</description>
    </item>
    
    <item>
      <title>Static Code Analysis for Unity3D — Part 1</title>
      <link>https://thinkuldeep.github.io/post/static_code_analysis_unity_1/</link>
      <pubDate>Tue, 29 Oct 2019 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/static_code_analysis_unity_1/</guid>
      <description>Static code analysis is a standard practice in software development. There are code scanner tools, which scans the code to find vulnerabilities. There are some nice tools for visualizing and managing code quality. One of the most used tool is SonarQube, supports 25+ languages and flexible configurations of the rules.
There are not enough resources talking about static code analysis for Unity3D. This post covers steps to configure SonarQube and use it for scanning Unity projects.</description>
    </item>
    
  </channel>
</rss>