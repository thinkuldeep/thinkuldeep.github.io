<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jvm on Kuldeep Singh</title>
    <link>https://thinkuldeep.github.io/tags/jvm/</link>
    <description>Recent content in jvm on Kuldeep Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Feb 2013 10:58:08 -0400</lastBuildDate>
    
	<atom:link href="https://thinkuldeep.github.io/tags/jvm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Charset configuration in JVM</title>
      <link>https://thinkuldeep.github.io/post/java-charset-configuration/</link>
      <pubDate>Thu, 14 Feb 2013 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java-charset-configuration/</guid>
      <description>Introduction This article describes how to configure charset for a JVM.
We faced an issue on a Linux environment, a file containing some Swedish character was not being read correctly by underlying JVM since the default charset of JVM was picked as UTF-8 (which does not support some Swedish character). But on the other hand, in Windows environment, it was working fine since the default charset was picked as Windows-1252 (which does support these characters).</description>
    </item>
    
    <item>
      <title>Default Timezone in Java and MySQL</title>
      <link>https://thinkuldeep.github.io/post/java-mysql-timezone-configuration/</link>
      <pubDate>Sun, 15 Apr 2012 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java-mysql-timezone-configuration/</guid>
      <description>Introduction On one of our production environments, we had an issue our application related to time, specially modified time and creation time of the entities. It was quite random in nature for some entities.
We suspected that there might be issue in the timezone configuration.
Analysing the problem On production environment, we had limited permissions. We were not allowed to change system timezone. We noticed that Jboss is automatically picking the system timezone “Europe/Berlin” (which was configured from root user) and if we check the timezone for the linux user for which we have access it shows GMT time.</description>
    </item>
    
    <item>
      <title>Compiling Java Native C/C&#43;&#43; Code</title>
      <link>https://thinkuldeep.github.io/post/java-jni-cpp/</link>
      <pubDate>Mon, 20 Feb 2012 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java-jni-cpp/</guid>
      <description>Introduction We have faced multiple issues while compiling a native c/c++ code and using it with JNI in our Java application
 How to write a JNI program. jni_md.h not found. Incompatible data types. On widows cygwin1.dll is required when running Java code on the native library. and more.  Actually we were compiling NLP Solver’s native library (IPOPT) on windows 32 bit and on 64bit linux machine.
Solving the chaos!</description>
    </item>
    
    <item>
      <title>Font configuration in JVM</title>
      <link>https://thinkuldeep.github.io/post/java-font-mapping/</link>
      <pubDate>Thu, 05 Jan 2012 10:58:08 -0400</pubDate>
      
      <guid>https://thinkuldeep.github.io/post/java-font-mapping/</guid>
      <description>Introduction Last year we have migrated one of our application from Java 5 to Java 6. The Java 6(OpenJDK) installation was done by client on a fresh system. After installing our application (under JBoss app), we found the fonts on JFreeCharts and on the images generated from AWT were not correct.
We have solved the issue by configuring the fonts at JVM level. Let understand it better.
How AWT / JFreeCharts shows the fonts AWT rely on native fonts, it usages default Java fonts (which best fits) if no native fonts mapping found.</description>
    </item>
    
  </channel>
</rss>